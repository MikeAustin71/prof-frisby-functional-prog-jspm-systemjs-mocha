{"version":3,"sources":["../../src/tests/Ex03_tests.js"],"names":[],"mappings":";;;;;;;;;IAMY,IAAI;;;;IACJ,CAAC;;;;;;;;;;;;;;;;;;AAHN,IAAK,WAAW,WAAX,WAAW,GAAG,IAAI,CAAC;;AAQ/B,IAAI,KAAK,GAAG,uBAAuB,CAAC;;AAEpC,QAAQ,CAAC,0BAA0B,GAAG,KAAK,EAAE,YAAU;;AAEnD,YAAI,IAAI,GAAG,EAAC,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,iBAAiB,EAAC,CAAC;;AAE/D,gBAAQ,CAAC,sEAAsE,EAAE,YAAU;;AAEvF,oBAAI,QAAQ,GAAG,UAAU,CAAC;;AAE1B,oBAAI,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;AAE/B,oBAAI,MAAM,GAAG,MAAM,CAAC,GAAG,EAAE,CAAC;;AAE1B,kBAAE,CAAC,0DAA0D,EAAE,YAAU;;AAErE,4BAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAC,uCAAuC,CAAC,CAAC;iBAEnF,CAAC,CAAC;SAEN,CAAC,CAAC;;AAEH,gBAAQ,CAAC,wEAAwE,EAAE,YAAU;;AAEzF,oBAAI,QAAQ,GAAG,cAAc,CAAC;;AAE9B,oBAAI,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;;AAE/B,oBAAI,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;;AAE5B,kBAAE,CAAC,6DAA6D,EAAE,YAAU;;AAExE,4BAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAC,qCAAqC,CAAC,CAAC;iBAEjF,CAAC,CAAC;SAEN,CAAC,CAAC;CAGN,CAAC,CAAC","file":"Ex03_tests.js","sourcesContent":["/**\r\n * Created by Amarillo Mike on 12/26/2015.\r\n */\r\n\r\nexport let  __hotReload = true;\r\n\r\nimport * as Chai from 'chai';\r\nimport * as X from './../xlib/ExLib.js';\r\nimport _ from 'ramda';\r\nimport {Either,Maybe,Task} from 'folktale/data';\r\nimport {monads} from 'folktale/control';\r\n\r\nvar title = \"Examining - checkName\";\r\n\r\ndescribe(\"Ex03 Chapter 10 Examples\" + title, function(){\r\n\r\n    var user = {id: 1, name: \"John Doe\", email: \"eric@supply.com\"};\r\n\r\n    describe(\"Ex03-1 - This tests checkName(user) with a valid user. See ExLib.js \", function(){\r\n\r\n        var expected = 'John Doe';\r\n\r\n        var result = X.checkName(user);\r\n\r\n        var actual = result.get();\r\n\r\n        it(\"checkName should return Either.Right value = 'John Doe' \", function(){\r\n\r\n            Chai.assert.deepEqual(actual, expected,\"Error: 'ex3_1() a' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n    describe(\"Ex03-2 - This tests checkName(user) with an INVALID user. See ExLib.js\", function(){\r\n\r\n        var expected = \"invalid name\";\r\n\r\n        var result = X.checkName(null);\r\n\r\n        var actual = result.merge();\r\n\r\n        it(\"checkName should return Either.Left value = 'invalid name' \", function(){\r\n\r\n            Chai.assert.deepEqual(actual, expected,\"Error: 'ex1_1()' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n\r\n});\r\n"]}