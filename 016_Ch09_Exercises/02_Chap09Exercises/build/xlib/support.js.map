{"version":3,"sources":["../../src/xlib/support.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAUO,IAAI,KAAK,WAAL,KAAK,GAAG,gBAAE,KAAK,CAAC,UAAS,IAAI,EAAE,CAAC,EAAE;AACzC,WAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;CACxB,CAAC;;;;;;AAAC,AAEI,IAAI,OAAO,WAAP,OAAO,GAAG,SAAV,OAAO,CAAY,CAAC,EAAE;AAC7B,WAAO,AAAC,CAAC,IAAI,CAAC,CAAC,OAAO,GAAI,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;CAC7C;;;AAAC,AAGK,IAAI,EAAE,WAAF,EAAE,GAAG,SAAL,EAAE,CAAY,CAAC,EAAE;AACxB,QAAI,CAAC,eAAe,GAAG,CAAC,CAAC;CAC5B,CAAC;;AAEF,EAAE,CAAC,EAAE,GAAG,UAAS,CAAC,EAAE;AAChB,WAAO,IAAI,EAAE,CAAC,YAAW;AACrB,eAAO,CAAC,CAAC;KACZ,CAAC,CAAC;CACN,CAAC;;AAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,UAAS,CAAC,EAAE;AAC3B,WAAO,IAAI,EAAE,CAAC,gBAAE,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;CACrD,CAAC;;AAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,YAAW;AAC3B,WAAO,IAAI,CAAC,eAAe,EAAE,CAAC;CACjC,CAAC;;AAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,CAAC,EAAE;AAC7B,WAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;CAC7B,CAAC;;AAEF,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,UAAS,CAAC,EAAE;AAC1B,WAAO,IAAI,CAAC,KAAK,CAAC,UAAS,CAAC,EAAE;AAC1B,eAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KACnB,CAAC,CAAC;CACN,CAAC;;AAEF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AAC9B,WAAO,KAAK,GAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,GAAC,GAAG,CAAC;CAClD,CAAC;;AAEF,IAAI,eAAe,GAAG,SAAlB,eAAe,CAAY,CAAC,EAAE;AAAE,WAAO,CAAC,CAAC,eAAe,EAAE,CAAC;CAAE,CAAC;;AAE3D,IAAI,IAAI,WAAJ,IAAI,GAAG,SAAP,IAAI,CAAY,CAAC,EAAC;AAAE,WAAO,CAAC,CAAC,IAAI,EAAE,CAAC;CAAE;;;;;;;AAAC,AAO3C,IAAI,KAAK,WAAL,KAAK,GAAG,gBAAE,KAAK,CAAC,UAAS,CAAC,EAAE,CAAC,EAAC;AACrC,WAAQ,gBAAE,OAAO,CAAC,SArDd,MAAM,CAqDe,IAAI,EAAE,gBAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAE,CAChD,CAAC,CAAC;;AAEH,MAzDQ,IAAI,CAyDP,SAAS,CAAC,IAAI,GAAG,YAAU;AAAE,WAAO,IAAI,CAAC,KAAK,CAAC,gBAAE,QAAQ,CAAC,CAAC;CAAE,CAAC","file":"support.js","sourcesContent":["/*\r\nPartial excerpt from 'support.js', Professor Frisby's functional programming e-book.\r\nSource Code Repo = https://github.com/MostlyAdequate/mostly-adequate-guide.git\r\n\r\n */\r\n\r\nimport _ from 'ramda';\r\nimport {Task} from 'folktale/data';\r\nimport {monads} from 'folktale/control';\r\n\r\nexport var split = _.curry(function(what, x) {\r\n    return x.split(what);\r\n});\r\n\r\nexport var inspect = function(x) {\r\n    return (x && x.inspect) ? x.inspect() : x;\r\n};\r\n\r\n// IO\r\nexport var IO = function(f) {\r\n    this.unsafePerformIO = f;\r\n};\r\n\r\nIO.of = function(x) {\r\n    return new IO(function() {\r\n        return x;\r\n    });\r\n};\r\n\r\nIO.prototype.map = function(f) {\r\n    return new IO(_.compose(f, this.unsafePerformIO));\r\n};\r\n\r\nIO.prototype.join = function() {\r\n    return this.unsafePerformIO();\r\n};\r\n\r\nIO.prototype.chain = function(f) {\r\n    return this.map(f).join();\r\n};\r\n\r\nIO.prototype.ap = function(a) {\r\n    return this.chain(function(f) {\r\n        return a.map(f);\r\n    });\r\n};\r\n\r\nIO.prototype.inspect = function() {\r\n    return 'IO('+inspect(this.unsafePerformIO)+')';\r\n};\r\n\r\nvar unsafePerformIO = function(x) { return x.unsafePerformIO(); };\r\n\r\nexport var join = function(m){ return m.join(); };\r\n\r\n//export var chain = curry(function(f, m){\r\n//    return m.map(f).join(); // or compose(join, map(f))(m)\r\n//});\r\n\r\n//  chain :: Monad m => (a -> m b) -> m a -> m b\r\nexport var chain = _.curry(function(f, m){\r\n    return  _.compose(monads.join, _.map(f))(m) ; // or m.map(f).join()\r\n});\r\n\r\nTask.prototype.join = function(){ return this.chain(_.identity); };\r\n"]}