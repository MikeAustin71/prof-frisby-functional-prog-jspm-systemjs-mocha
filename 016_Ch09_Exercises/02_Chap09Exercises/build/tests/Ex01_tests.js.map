{"version":3,"sources":["../../src/tests/Ex01_tests.js"],"names":[],"mappings":";;;;;;;;;IAMY,IAAI;;;;;;;;;;;;;;AAFT,IAAK,WAAW,WAAX,WAAW,GAAG,IAAI,CAAC;;AAO/B,IAAI,KAAK,GAAG,eAAe,GACrB,8EAA8E,GAC/E,SAAS,CAAC;;AAGf,QAAQ,CAAC,0BAA0B,GAAG,KAAK,EAAE,YAAU;;AAInD,QAAI,IAAI,GAAG;AACP,UAAE,EAAE,CAAC;AACL,YAAI,EAAE,QAAQ;AACd,eAAO,EAAE;AACL,kBAAM,EAAE;AACJ,sBAAM,EAAE,EAAE;AACV,oBAAI,EAAE,WAAW;aACpB;SACJ;KACJ,CAAC;;AAEF,YAAQ,CAAC,oDAAoD,EAAE,YAAU;;AAErE,YAAI,QAAQ,GAAG,MAzBf,KAAK,CAyBgB,EAAE,CAAC,WAAW,CAAC,CAAC;;AAErC,YAAI,MAAM,GAAG,WA5Bb,KAAK,EA4Bc,IAAI,CAAC,CAAC;;AAEzB,UAAE,CAAC,+CAA+C,EAAE,YAAU;;AAE1D,gBAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAC,MAAM,CAAC,GAAG,EAAE,EAAC,yCAAyC,CAAC,CAAC;SAEhG,CAAC,CAAC;KAEN,CAAC,CAAC;;AAEH,YAAQ,CAAC,qDAAqD,EAAE,YAAU;;AAEtE,YAAI,QAAQ,GAAG,MAvCf,KAAK,CAuCgB,EAAE,CAAC,WAAW,CAAC,CAAC;;AAErC,YAAI,MAAM,GAAG,WA1Cb,KAAK,EA0Cc,IAAI,CAAC,CAAC;;AAEzB,UAAE,CAAC,+CAA+C,EAAE,YAAU;;AAE1D,gBAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,EAAC,MAAM,CAAC,GAAG,EAAE,EAAC,yCAAyC,CAAC,CAAC;SAEhG,CAAC,CAAC;KAEN,CAAC,CAAC;CAEN,CAAC,CAAC","file":"Ex01_tests.js","sourcesContent":["/**\r\n * Created by mike10 on 12/21/2015.\r\n */\r\n\r\nexport let  __hotReload = true;\r\n\r\nimport * as Chai from 'chai';\r\nimport {ex1_1, ex1_2} from './../xlib/ExLib.js';\r\nimport {Maybe} from 'folktale/data';\r\nimport {monads} from 'folktale/control';\r\n\r\nvar title = \"Exercise 1 - \"\r\n    + \"Use safeProp and map/join or chain to safely get the street name when given \"\r\n    +\"a user.\";\r\n\r\n\r\ndescribe(\"Ex01 Chapter 9 Exercises\" + title, function(){\r\n\r\n\r\n\r\n    var user = {\r\n        id: 2,\r\n        name: \"albert\",\r\n        address: {\r\n            street: {\r\n                number: 22,\r\n                name: 'Walnut St'\r\n            }\r\n        }\r\n    };\r\n\r\n    describe(\"Ex01-1 - This technique uses 'join'. See ExLib.js \", function(){\r\n\r\n        var expected = Maybe.of('Walnut St');\r\n\r\n        var result = ex1_1(user);\r\n\r\n        it(\"ex1_1(user) should return name = 'Walnut St' \", function(){\r\n\r\n            Chai.assert.deepEqual(expected.get(),result.get(),\"Error: 'ex1_1(user)' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n    describe(\"Ex01-2 - This technique uses 'chain'. See ExLib.js \", function(){\r\n\r\n        var expected = Maybe.of('Walnut St');\r\n\r\n        var result = ex1_1(user);\r\n\r\n        it(\"ex1_2(user) should return name = 'Walnut St' \", function(){\r\n\r\n            Chai.assert.deepEqual(expected.get(),result.get(),\"Error: 'ex1_2(user)' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n});\r\n\r\n\r\n\r\n"]}