{"version":3,"sources":["../../src/tests/Ex05_tests.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAIO,IAAI,WAAW,WAAX,WAAW,GAAG,IAAI,CAAC;;AAK9B,QAAQ,CAAC,6BAA6B,EAAE,YAAU;;;AAG9C,gBAAI,aAAa,GAAG,SAAhB,aAAa,CAAY,CAAC,EAAC;AAC3B,+BAAO,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,GAAI,MAN3B,MAAM,CAM4B,KAAK,CAAC,CAAC,CAAC,GAAK,MAN/C,MAAM,CAMgD,IAAI,CAAC,eAAe,CAAC,AAAC,CAAC;aACvF,CAAC;;AAEF,oBAAQ,CAAC,mCAAmC,EAAE,YAAU;;AAEpD,0BAAE,CAAC,uFAAuF,EAAE,YAAU;;AAElG,wCAAI,QAAQ,GAAG,MAbZ,MAAM,CAaa,KAAK,CAAC,oBAAoB,CAAC,CAAC;AAClD,wCAAI,MAAM,GAAG,aAAa,CAAC,oBAAoB,CAAC,CAAC;;AAEjD,0CAlBJ,MAAM,CAkBK,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,6CAA6C,CAAC,CAAC;yBAEnF,CAAC,CAAC;;AAEH,0BAAE,CAAC,yEAAyE,EAAE,YAAU;;AAEpF,wCAAI,QAAQ,GAAG,MAtBZ,MAAM,CAsBa,IAAI,CAAC,eAAe,CAAC,CAAC;AAC5C,wCAAI,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;;AAEzC,0CA3BJ,MAAM,CA2BK,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,6CAA6C,CAAC,CAAC;yBAEnF,CAAC,CAAC;aAEN,CAAC,CAAC;;AAEH,oBAAQ,CAAC,yCAAyC,EAAE,YAAU;;AAE1D,0BAAE,CAAC,gFAAgF,EAAE,YAAU;;AAE3F,wCAAI,QAAQ,GAAG,oBAAoB,CAAC;AACpC,wCAAI,EAAE,GAAG,aAAa,CAAC,oBAAoB,CAAC,CAAC;AAC7C,wCAAI,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;;AAEtB,0CAzCJ,MAAM,CAyCK,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,6CAA6C,CAAC,CAAC;yBAEnF,CAAC,CAAC;;AAEH,0BAAE,CAAC,2EAA2E,EAAE,YAAU;;AAEtF,wCAAI,QAAQ,GAAG,eAAe,CAAC;AAC/B,wCAAI,MAAM,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC,KAAK,EAAE,CAAC;;AAEjD,0CAlDJ,MAAM,CAkDK,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,6CAA6C,CAAC,CAAC;yBAEnF,CAAC,CAAC;aAEN,CAAC,CAAC;;AAGH,oBAAQ,CAAC,oCAAoC,EAAE,YAAU;;AAErD,0BAAE,CAAC,mEAAmE,EAAE,YAAU;;AAE9E,wCAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,wCAAI,EAAE,GAAG,aAAa,CAAC,oBAAoB,CAAC,CAAC;AAC7C,wCAAI,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC;;AAExB,0CAjEJ,MAAM,CAiEK,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,qCAAqC,CAAC,CAAC;yBAE3E,CAAC,CAAC;;AAEH,0BAAE,CAAC,0DAA0D,EAAE,YAAU;;AAErE,wCAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,wCAAI,EAAE,GAAG,aAAa,CAAC,YAAY,CAAC,CAAC;AACrC,wCAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;;AAEvB,0CA3EJ,MAAM,CA2EK,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,oCAAoC,CAAC,CAAC;yBAE1E,CAAC,CAAC;aAEN,CAAC,CAAC;CAEN,CAAC,CAAC","file":"Ex05_tests.js","sourcesContent":["/**\r\n * Created by mike10 on 12/23/2015.\r\n */\r\n\r\nexport let __hotReload = true;\r\nimport {assert} from 'chai/lib/chai.js';\r\n\r\nimport {Maybe, Either} from 'folktale/data';\r\n\r\ndescribe(\"Ex05 Test folktale 'Either'\", function(){\r\n\r\n    // This version of validateEmail returns a folktale 'Either' object.\r\n    var validateEmail = function(x){\r\n        return x.match(/\\S+@\\S+\\.\\S+/) ? (Either.Right(x)) : (Either.Left('invalid email'));\r\n    };\r\n\r\n    describe(\"Ex05-1 - folktale Either Examples\", function(){\r\n\r\n        it(\"validateEmail('sleepy@grandpa.net') should return Either.Right('sleepy@grandpa.net') \", function(){\r\n\r\n            var expected = Either.Right('sleepy@grandpa.net');\r\n            var result = validateEmail('sleepy@grandpa.net');\r\n\r\n            assert.deepEqual(expected,result,\"Error: 'validateEmail()' result is INVALID!\");\r\n\r\n        });\r\n\r\n        it(\"validateEmail('notanemail') should return Either.Left('invalid email') \", function(){\r\n\r\n            var expected = Either.Left('invalid email');\r\n            var result = validateEmail('notanemail');\r\n\r\n            assert.deepEqual(expected,result,\"Error: 'validateEmail()' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n    describe(\"Ex05-2 - folktale Either.get() Examples\", function(){\r\n\r\n        it(\"validateEmail('sleepy@grandpa.net') should return string 'sleepy@grandpa.net' \", function(){\r\n\r\n            var expected = 'sleepy@grandpa.net';\r\n            var e1 = validateEmail('sleepy@grandpa.net');\r\n            var result = e1.get();\r\n\r\n            assert.deepEqual(expected,result,\"Error: 'validateEmail()' result is INVALID!\");\r\n\r\n        });\r\n\r\n        it(\"validateEmail('notanemail').merge() should return string 'invalid email' \", function(){\r\n\r\n            var expected = 'invalid email';\r\n            var result = validateEmail('notanemail').merge();\r\n\r\n            assert.deepEqual(expected,result,\"Error: 'validateEmail()' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n\r\n    describe(\"Ex05-3 - Either.IsRight and IsLeft\", function(){\r\n\r\n        it(\"validateEmail('sleepy@grandpa.net') isRight should return 'true' \", function(){\r\n\r\n            var expected = true;\r\n            var e1 = validateEmail('sleepy@grandpa.net');\r\n            var result = e1.isRight;\r\n\r\n            assert.deepEqual(expected,result,\"Error: 'isRight' result is INVALID!\");\r\n\r\n        });\r\n\r\n        it(\"validateEmail('notanemail') isLeft should return 'true' \", function(){\r\n\r\n            var expected = true;\r\n            var e1 = validateEmail('notanemail');\r\n            var result = e1.isLeft;\r\n\r\n            assert.deepEqual(expected,result,\"Error: 'isLeft' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n});\r\n\r\n\r\n\r\n"]}