{"version":3,"sources":["../../src/tests/Ex03_tests.js"],"names":[],"mappings":";;;;;;;;;IAKY,IAAI;;;;;;;;;;;;AADT,IAAI,WAAW,WAAX,WAAW,GAAG,IAAI,CAAC;;AAM9B,QAAQ,CAAC,2CAA2C,EAAE,YAAU;;AAE5D,YAAQ,CAAC,sCAAsC,EAAE,YAAU;;AAEvD,YAAI,MAAM,GACV;AACI,qBAAS,EAAC,CACN,EAAC,MAAM,EAAC,EAAC,IAAI,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAC,EAAE,GAAG,EAAC,KAAK,EAAC,EAC5D,EAAC,MAAM,EAAC,EAAC,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,OAAO,EAAC,EAAE,GAAG,EAAC,KAAK,EAAC,EAC1D,EAAC,MAAM,EAAC,EAAC,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,GAAG,EAAC,EAAE,GAAG,EAAC,KAAK,EAAC,CAC5D;AACD,kBAAM,EAAE,CACJ,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAC,EAC7B,EAAC,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,IAAI,EAAC,EACnC,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAC,CAChC;;SAEJ,CAAC;;AAEF,YAAI,QAAQ,GAAG,MArBf,KAAK,CAqBgB,EAAE,CAAC,EAAC,IAAI,EAAE,cAAc,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAC,CAAC;AAClE,YAAI,MAAM,GAAG,WAvBb,mBAAmB,EAuBc,MAAM,CAAC,CAAC;;AAEzC,UAAE,CAAC,6GAA6G,EAAE,YAAU;;AAExH,gBAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,mDAAmD,CAAC,CAAC;SAE9F,CAAC,CAAC;KAEN,CAAC,CAAC;CAEN,CAAC,CAAC","file":"Ex03_tests.js","sourcesContent":["/**\r\n * Created by mike10 on 12/21/2015.\r\n */\r\n\r\nexport let __hotReload = true;\r\nimport * as Chai from 'chai';\r\n\r\nimport {mFirstAddressStreet} from './../xlib/ExLib.js';\r\nimport {Maybe} from 'folktale/data';\r\n\r\ndescribe(\"Ex03 Refactor firstStreetAddress as monad\", function(){\r\n\r\n    describe(\"Ex03-1 - mFirstAddressStreet Example\", function(){\r\n\r\n        var txAddr =\r\n        {\r\n            addresses:[\r\n                {street:{name: 'Hwy 290 West', number: '555555'}, Zip:91210},\r\n                {street:{name: 'Kimball Ave', number: '21360'}, Zip:75911},\r\n                {street:{name: 'DuckBill Trail', number: '5'}, Zip:52119}\r\n            ],\r\n            cities: [\r\n                {city: 'Austin', state: 'TX'},\r\n                {city: 'Raymondville', state: 'TX'},\r\n                {city: 'Taylor', state: 'TX'}\r\n            ]\r\n\r\n        };\r\n\r\n        var expected = Maybe.of({name: 'Hwy 290 West', number: '555555'});\r\n        var result = mFirstAddressStreet(txAddr);\r\n\r\n        it(\"mFirstAddressStreet(txAddr) should return Maybe 1-level deep -> '{name: 'Hwy 290 West', number: '555555'}' \", function(){\r\n\r\n            Chai.assert.deepEqual(expected,result,\"Error: 'mFirstAddressStreet()' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n});\r\n\r\n"]}