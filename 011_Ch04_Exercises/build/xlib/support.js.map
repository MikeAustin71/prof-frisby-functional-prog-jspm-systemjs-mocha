{"version":3,"sources":["../../src/xlib/support.js"],"names":[],"mappings":";;;;;;QAwBgB,KAAK,GAAL,KAAK;QASL,IAAI,GAAJ,IAAI;;;;;;;;AA3Bb,IAAI,MAAM,WAAN,MAAM,GAAG,gBAAE,KAAK,CAAC,GAAG,CAAC;;;;AAAC,AAE1B,IAAI,QAAQ,WAAR,QAAQ,GAAG,gBAAE,GAAG,CAAC,MAAM,CAAC,CAAC;;AAE7B,IAAI,QAAQ,WAAR,QAAQ,GAAG,gBAAE,MAAM,CAAC,gBAAE,IAAI,CAAC,IAAI,CAAC,CAAC;;;;;;AAAC,AAMtC,IAAI,GAAG,WAAH,GAAG,GAAI,gBAAE,MAAM,CAAC,gBAAE,GAAG,CAAC,gBAAE,EAAE,CAAC,EAAC,CAAC,EAAC,gBAAE,EAAE,CAAC,CAAC;;AAExC,IAAI,KAAK,WAAL,KAAK,GAAG,gBAAE,KAAK,CAAC,gBAAE,EAAE,EAAC,gBAAE,EAAE,EAAC,gBAAE,EAAE,CAAC,CAAC;;AAEpC,IAAI,IAAI,WAAJ,IAAI,GAAG,gBAAE,KAAK,CAAC,CAAC,EAAC,gBAAE,EAAE,EAAE,gBAAE,EAAE,CAAC,CAAC;;AAEjC,IAAI,OAAO,WAAP,OAAO,GAAG,gBAAE,OAAO,CAAC,gBAAE,EAAE,CAAC,CAAC;;AAE9B,SAAS,KAAK,CAAC,GAAG,EAAE;;AAEvB,WAAO,MAAM,CAAC,GAAG,CAAC,CAAC;CAEtB;;AAKM,SAAS,IAAI,GAAE,EAErB;;AAED,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,UAAS,GAAG,EAAC;AACrC,WAAO,MAAM,CAAC,GAAG,CAAC,CAAC;CACtB,CAAC","file":"support.js","sourcesContent":["/**\r\n * Created by mike10 on 12/6/2015.\r\n */\r\n\r\nimport R from 'ramda';\r\n\r\nexport var xWords = R.split(' ');\r\n\r\nexport var sentence = R.map(xWords);\r\n\r\nexport var filterQS = R.filter(R.test(/q/i));\r\n\r\n// All three solutions work for max\r\n//var _keepHighest = function(x,y){ return x >= y ? x : y; }; // <- leave be\r\n//var _keepHighest = R.max;\r\n// Solution # 3 - probably the best.\r\nexport var max  = R.reduce(R.max(R.__),0,R.__);\r\n\r\nexport var slice = R.slice(R.__,R.__,R.__);\r\n\r\nexport var take = R.slice(0,R.__, R.__);\r\n\r\nexport var flatten = R.flatten(R.__);\r\n\r\nexport function words(str) {\r\n\r\n    return xWords(str);\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport function Xlib(){\r\n\r\n}\r\n\r\nXlib.prototype.splitWords = function(str){\r\n    return xWords(str);\r\n};\r\n"]}