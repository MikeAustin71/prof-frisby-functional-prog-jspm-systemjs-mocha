{"version":3,"sources":["../../src/tests/Ex03_tests.js"],"names":[],"mappings":";;;;;;IAMY,IAAI;;;;;;AAIhB,QAAQ,CAAC,4BAA4B,EAAE,YAAU;;AAE7C,gBAAQ,CAAC,uCAAuC,EAAE,YAAU;;AAExD,oBAAI,QAAQ,GAAG,MAAM,CAAC;AACtB,oBAAI,MAAM,GAAG,aAXb,OAAO,EAWc,GAAG,CAAC,CAAC;;AAG1B,kBAAE,CAAC,kCAAkC,GAAG,QAAQ,GAAG,GAAG,EAAG,YAAU;;AAE/D,4BAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,uCAAuC,CAAC,CAAC;iBAElF,CAAC,CAAC;SAEN,CAAC,CAAC;;AAEH,gBAAQ,CAAC,6DAA6D,EAAE,YAAU;;AAE9E,oBAAI,MAAM,GAAG,aAxBJ,QAAQ,EAwBK,UApBtB,IAAI,CAoBuB,CAAC,CAAC,CAAC,CAAC;AAC/B,oBAAI,QAAQ,GAAG,WAAW,CAAC;;AAE3B,kBAAE,CAAC,mCAAmC,GAAG,QAAQ,GAAG,GAAG,EAAE,YAAU;;AAE/D,4BAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,sCAAsC,CAAC,CAAC;iBAEjF,CAAC,CAAC;SAEN,CAAC,CAAC;;AAEH,gBAAQ,CAAC,2CAA2C,EAAE,YAAU;;AAE5D,oBAAI,MAAM,GAAG,aArCM,kBAAkB,YAIrC,IAAI,CAiCiC,CAAC;AACtC,oBAAI,QAAQ,GAAG,WAAW,CAAC;;AAE3B,kBAAE,CAAC,uCAAuC,GAAG,QAAQ,GAAG,GAAG,EAAE,YAAU;;AAEnE,4BAAI,MAAM,GAAG,yDAAyD,GAAG,MAAM,CAAC;AAChF,4BAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAC,MAAM,EAAC,MAAM,CAAC,CAAC;iBAEjD,CAAC,CAAC;SAEN,CAAC,CAAC;CAGN,CAAC;;;;AAAC","file":"Ex03_tests.js","sourcesContent":["/**\r\n * Created by mike10 on 12/8/2015.\r\n */\r\n\r\nimport {toFixed ,carValue, averageDollarValue} from './../xlib/support.js';\r\n\r\nimport * as Chai from 'chai';\r\n\r\nimport {CARS} from './../exercises/testData';\r\n\r\ndescribe(\"Ex03 Composition Exercises\", function(){\r\n\r\n    describe(\"Ex03 - Convert String to dollar value\", function(){\r\n\r\n        var expected = '5.00';\r\n        var result = toFixed('5');\r\n\r\n\r\n        it(\"should return expected value = '\" + expected + \"'\" , function(){\r\n\r\n            Chai.assert.deepEqual(expected,result,\"Error: 'toFixed()' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n    describe(\"Ex03 - Derive formatted numeric value from car dollar_value\", function(){\r\n\r\n        var result = carValue(CARS[0]);\r\n        var expected = '700000.00';\r\n\r\n        it(\"should return first car value = '\" + expected + \"'\", function(){\r\n\r\n            Chai.assert.deepEqual(expected,result,\"Error: 'carValue' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n    describe(\"Ex03 - Average dollar_values for all cars\", function(){\r\n\r\n        var result = averageDollarValue(CARS);\r\n        var expected = '790700.00';\r\n\r\n        it(\"should average for all car values = '\" + expected + \"'\", function(){\r\n\r\n            var errMsg = \"Error: 'carValue' result is INVALID! function result = \" + result;\r\n            Chai.assert.deepEqual(expected,result,errMsg);\r\n\r\n        });\r\n\r\n    });\r\n\r\n\r\n});\r\n\r\n"]}