{"version":3,"sources":["../../src/xlib/support.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBO,IAAI,UAAU,WAAV,UAAU,GAAG,gBAAE,IAAI,CAAC,UAAU,EAAC,gBAAE,EAAE,CAAC,CAAC;;AAEzC,IAAI,aAAa,WAAb,aAAa,GAAG,gBAAE,OAAO,CAAC,UAAU,EAAC,gBAAE,IAAI,CAAC,gBAAE,EAAE,CAAC,CAAE;;;;;;;AAAC,AAOxD,IAAI,OAAO,WAAP,OAAO,GAAG,gBAAE,IAAI,CAAC,MAAM,EAAE,gBAAE,EAAE,CAAC,CAAC;;AAEnC,IAAI,cAAc,WAAd,cAAc,GAAG,gBAAE,OAAO,CAAC,OAAO,EAAE,gBAAE,IAAI,CAAC,gBAAE,EAAE,CAAC,CAAE;;;;;;;;;;;;AAAC,AAY9D,IAAI,QAAQ,GAAG,gBAAE,MAAM,CAAC,CAAC,EAAC,qBAAI,OAAO,CAAC,CAAC;;AAEhC,IAAI,OAAO,WAAP,OAAO,GAAG,QAAQ,CAAC,gBAAE,EAAE,EAAC,CAAC,CAAC,CAAC;;AAE/B,IAAI,QAAQ,WAAR,QAAQ,GAAG,gBAAE,OAAO,CAAC,OAAO,EAAE,gBAAE,IAAI,CAAC,cAAc,EAAE,gBAAE,EAAE,CAAC,CAAC,CAAC;;AAEhE,IAAI,QAAQ,WAAR,QAAQ,GAAG,SAAX,QAAQ,CAAY,EAAE,EAAE;AAAE,SAAO,gBAAE,MAAM,CAAC,gBAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;CAAE,CAAC;;AAE3E,IAAI,kBAAkB,WAAlB,kBAAkB,GAAG,gBAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,gBAAE,GAAG,CAAC,gBAAE,IAAI,CAAC,cAAc,EAAE,gBAAE,EAAE,CAAC,EAAC,gBAAE,EAAE,CAAC,CAAC;;;;;;AAAC,AAMvG,IAAI,WAAW,GAAG,gBAAE,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;;AAAC,AAElC,IAAI,aAAa,WAAb,aAAa,GAAG,gBAAE,GAAG,CAAC,gBAAE,OAAO,CAAC,WAAW,EAAE,gBAAE,OAAO,EAAE,gBAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;;;;;;;;;;;;AAAC,AAe7E,IAAI,QAAQ,WAAR,QAAQ,GAAG,gBAAE,MAAM,CAAC,CAAC,EAAE,qBAAI,WAAW,CAAC,CAAC;;AAE5C,IAAI,QAAQ,WAAR,QAAQ,GAAG,gBAAE,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;;AAGpD,IAAI,MAAM,GAAG,gBAAE,MAAM,CAAC,UAAU,EAAC,gBAAE,EAAE,CAAC,CAAC;;AAEhC,IAAI,eAAe,WAAf,eAAe,GAAG,gBAAE,OAAO,CAAC,gBAAE,IAAI,CAAC,IAAI,CAAC,EAAE,gBAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC;;;;;;;;;;;;AAAC,AAc9E,IAAI,MAAM,GAAG,gBAAE,IAAI,CAAC,gBAAE,MAAM,CAAC,CAAC;AACvB,IAAI,UAAU,WAAV,UAAU,GAAG,gBAAE,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,EACvD,gBAAE,IAAI,CAAC,MAAM,CAAC,EACd,gBAAE,IAAI,EACN,gBAAE,MAAM,CAAC,gBAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC","file":"support.js","sourcesContent":["/**\r\n * Created by mike10 on 12/8/2015.\r\n */\r\n\r\nimport R from 'ramda';\r\n\r\nimport acc from 'accounting';\r\n\r\n\r\n// Exercise 1:\r\n// ============\r\n// use _.compose() to rewrite the function below. Hint: _.prop() is curried.\r\n//var isLastInStock = function(cars) {\r\n//    var last_car = _.last(cars);\r\n//    return _.prop('in_stock', last_car);\r\n//};\r\n\r\nexport var carInStock = R.prop('in_stock',R.__);\r\n\r\nexport var isLastInStock = R.compose(carInStock,R.last(R.__) );\r\n\r\n// Exercise 2:\r\n// ============\r\n// use _.compose(), _.prop() and _.head() to retrieve the name of the first car\r\n//var nameOfFirstCar = undefined;\r\n\r\nexport var carName = R.prop('name', R.__);\r\n\r\nexport var nameOfFirstCar = R.compose(carName, R.head(R.__) );\r\n\r\n// Exercise 3:\r\n// ============\r\n// Use the helper function _average to refactor averageDollarValue as a composition\r\n//var _average = function(xs) { return _.reduce(_.add, 0, xs) / xs.length; }; // <- leave be\r\n\r\n//var averageDollarValue = function(cars) {\r\n//    var dollar_values = _.map(function(c) { return c.dollar_value; }, cars);\r\n//    return _average(dollar_values);\r\n//};\r\n\r\nvar setFixed = R.curryN(2,acc.toFixed);\r\n\r\nexport var toFixed = setFixed(R.__,2);\r\n\r\nexport var carValue = R.compose(toFixed, R.prop('dollar_value', R.__));\r\n\r\nexport var xAverage = function(xs) { return R.reduce(R.add, 0, xs) / xs.length; };\r\n\r\nexport var averageDollarValue = R.compose(toFixed, xAverage, R.map(R.prop('dollar_value', R.__),R.__));\r\n\r\n// Exercise 4:\r\n// ============\r\n// Write a function: sanitizeNames() using compose that returns a list of lowercase and underscored car's names: e.g: sanitizeNames([{name: \"Ferrari FF\", horsepower: 660, dollar_value: 700000, in_stock: true}]) //=> [\"ferrari_ff\"].\r\n\r\nvar xUnderscore = R.replace(/\\W+/g, '_'); //<-- leave this alone and use to sanitize\r\n\r\nexport var sanitizeNames = R.map(R.compose(xUnderscore, R.toLower, R.prop('name')));\r\n\r\n\r\n// Bonus 1:\r\n// ============\r\n// Refactor availablePrices with compose.\r\n\r\n//var availablePrices = function(cars) {\r\n//    var available_cars = _.filter(_.prop('in_stock'), cars);\r\n//    return available_cars.map(function(x){\r\n//        return accounting.formatMoney(x.dollar_value);\r\n//    }).join(', ');\r\n//};\r\n\r\n\r\nexport var fmtMoney = R.curryN(1, acc.formatMoney);\r\n\r\nexport var fmtPrice = R.compose(fmtMoney, carValue);\r\n\r\n\r\nvar filter = R.filter(carInStock,R.__);\r\n\r\nexport var availablePrices = R.compose(R.join(', '), R.map(fmtPrice) ,filter);\r\n\r\n\r\n// Bonus 2:\r\n// ============\r\n// Refactor to pointfree. Hint: you can use _.flip()\r\n\r\n//var fastestCar = function(cars) {\r\n//    var sorted = _.sortBy(function(car){ return car.horsepower }, cars);\r\n//    var fastest = _.last(sorted);\r\n//    return fastest.name + ' is the fastest';\r\n//};\r\n\r\n\r\nvar append = R.flip(R.concat);\r\nexport var fastestCar = R.compose(append(' is the fastest'),\r\n    R.prop('name'),\r\n    R.last,\r\n    R.sortBy(R.prop('horsepower')));"]}