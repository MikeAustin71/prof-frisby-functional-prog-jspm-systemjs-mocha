{"version":3,"sources":["../../src/xlib/ExLib.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIO,IAAI,WAAW,WAAX,WAAW,GAAG,IAAI,CAAC;;;;;;AAWvB,IAAI,IAAI,WAAJ,IAAI,GAAI,gBAAE,GAAG,CAAC,gBAAE,GAAG,CAAC,CAAC,EAAC,gBAAE,EAAE,CAAC,EAAC,gBAAE,EAAE,CAAC;;;;;;;;AAAC,AAS7C,IAAI,OAAO,GAAG,SAAV,OAAO,CAAY,CAAC,EAAE;AACtB,WAAO,AAAC,CAAC,IAAI,CAAC,CAAC,OAAO,GAAI,CAAC,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;CAC7C;;;AAAC,AAIK,IAAI,QAAQ,WAAR,QAAQ,GAAG,SAAX,QAAQ,CAAY,CAAC,EAAE;AAC9B,QAAI,CAAC,OAAO,GAAG,CAAC,CAAC;CACpB,CAAC;;AAEF,QAAQ,CAAC,EAAE,GAAG,UAAS,CAAC,EAAE;AAAE,WAAO,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;CAAE,CAAC;;AAEtD,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,UAAS,CAAC,EAAE;AACjC,WAAO,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;CACvC,CAAC;;AAEF,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,YAAW;AACpC,WAAO,WAAW,GAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAC,GAAG,CAAC;CAChD,CAAC;;AAEK,IAAI,WAAW,WAAX,WAAW,GAAG,gBAAE,GAAG,CAAC,gBAAE,IAAI,CAAC;;;;;;AAAC,AAMhC,IAAI,QAAQ,WAAR,QAAQ,GAAG,gBAAE,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AAAE,WAAO,MA1C1C,KAAK,CA0C2C,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CAAE,CAAC,CAAC;;AAEnE,IAAI,gBAAgB,WAAhB,gBAAgB,GAAG,gBAAE,OAAO,CAAE,gBAAE,GAAG,CAAC,gBAAE,IAAI,CAAC,EAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;;;AAAC,AASlE,IAAI,QAAQ,WAAR,QAAQ,GAAG,gBAAE,OAAO,CAAC,gBAAE,GAAG,CAAC,QAAQ,CAAC,EAAE,MArDpC,KAAK,CAqDqC,EAAE,CAAC,CAAC","file":"ExLib.js","sourcesContent":["/**\r\n * Created by mike10 on 12/16/2015.\r\n */\r\n\r\nexport let __hotReload = true;\r\n\r\nimport _ from 'ramda';\r\n\r\nimport {Task,Maybe} from 'folktale/data';\r\n\r\n\r\n// Exercise 1\r\n// ==========\r\n// Use _.add(x,y) and map(f,x) to make a function that increments a value inside a functor\r\n\r\nexport var add1 =  _.map(_.add(1,_.__),_.__);\r\n\r\n\r\n//Exercise 2\r\n// ==========\r\n// Use _.head to get the first element of the list\r\n// var xs = Identity.of(['do', 'ray', 'me', 'fa', 'so', 'la', 'ti', 'do']);\r\n// var ex2 = undefined\r\n\r\nvar inspect = function(x) {\r\n    return (x && x.inspect) ? x.inspect() : x;\r\n};\r\n\r\n\r\n// Identity\r\nexport var Identity = function(x) {\r\n    this.__value = x;\r\n};\r\n\r\nIdentity.of = function(x) { return new Identity(x); };\r\n\r\nIdentity.prototype.map = function(f) {\r\n    return Identity.of(f(this.__value));\r\n};\r\n\r\nIdentity.prototype.inspect = function() {\r\n    return 'Identity('+inspect(this.__value)+')';\r\n};\r\n\r\nexport var firstInList = _.map(_.head);\r\n\r\n// Exercise 3\r\n// ==========\r\n// Use safeProp and _.head to find the first initial of the user\r\n\r\nexport var safeProp = _.curry(function (x, o) { return Maybe.of(o[x]); });\r\n\r\nexport var findFirstInitial = _.compose( _.map(_.head),safeProp('name'));\r\n\r\n// Exercise 4\r\n// ==========\r\n// Use Maybe to rewrite ex4 without an if statement\r\n//var ex4 = function (n) {\r\n//    if (n) { return parseInt(n); }\r\n//};\r\n\r\nexport var intParse = _.compose(_.map(parseInt), Maybe.of);"]}