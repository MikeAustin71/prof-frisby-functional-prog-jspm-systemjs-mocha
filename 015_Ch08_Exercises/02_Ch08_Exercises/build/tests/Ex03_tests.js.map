{"version":3,"sources":["../../src/tests/Ex03_tests.js"],"names":[],"mappings":";;;;;;;;;IAMY,IAAI;;;;;;;;;;;;AAFT,IAAI,WAAW,WAAX,WAAW,GAAG,IAAI,CAAC;;AAQ9B,QAAQ,CAAC,wBAAwB,EAAE,YAAU;;;;;;AAQzC,gBAAQ,CAAC,qBAAqB,EAAE,YAAU;;AAEtC,oBAAI,IAAI,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;AACrC,oBAAI,QAAQ,GAAG,MAbf,KAAK,CAagB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACtC,oBAAI,MAAM,GAAG,WAhBb,QAAQ,EAgBc,MAAM,EAAE,IAAI,CAAC,CAAC;;AAEpC,kBAAE,CAAC,2DAA2D,EAAE,YAAU;;AAEtE,4BAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,wCAAwC,CAAC,CAAC;iBAEnH,CAAC,CAAC;SAEN,CAAC;;;;;AAAC,AAKH,gBAAQ,CAAC,4BAA4B,EAAE,YAAU;;AAE7C,oBAAI,IAAI,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;AACrC,oBAAI,QAAQ,GAAG,MA9Bf,KAAK,CA8BgB,EAAE,CAAC,GAAG,CAAC,CAAC;AAC7B,oBAAI,MAAM,GAAG,WAjCH,gBAAgB,EAiCI,IAAI,CAAC,CAAC;;AAEpC,kBAAE,CAAC,6EAA6E,EAAE,YAAU;;AAExF,4BAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,gDAAgD,CAAC,CAAC;iBAE3H,CAAC,CAAC;SAEN,CAAC,CAAC;CAEN,CAAC,CAAC","file":"Ex03_tests.js","sourcesContent":["/**\r\n * Created by mike10 on 12/16/2015.\r\n */\r\n\r\nexport let __hotReload = true;\r\n\r\nimport * as Chai from 'chai';\r\n\r\nimport {safeProp, findFirstInitial} from './../xlib/ExLib.js';\r\n\r\nimport {Maybe} from 'folktale/data';\r\n\r\ndescribe(\"Ex03 Functor Exercises\", function(){\r\n\r\n\r\n// Exercise 3\r\n// ==========\r\n// Use safeProp and _.head to find the first initial of the user\r\n\r\n\r\n    describe(\"Ex03-1 - safeProp()\", function(){\r\n\r\n        var user = { id: 2, name: \"Albert\" };\r\n        var expected = Maybe.of(user['name']);\r\n        var result = safeProp('name', user);\r\n\r\n        it(\"safeProp() should return name from user json  = 'Albert' \", function(){\r\n\r\n            Chai.assert.deepEqual(expected.getOrElse(null),result.getOrElse(null),\"Error: 'safeProp()' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n// Exercise 3\r\n// ==========\r\n// Use safeProp and _.head to find the first initial of the user\r\n    describe(\"Ex03-2 - findFirstInital()\", function(){\r\n\r\n        var user = { id: 2, name: \"Albert\" };\r\n        var expected = Maybe.of('A');\r\n        var result = findFirstInitial(user);\r\n\r\n        it(\"findFirstInitial should return first initial from name in user json  = 'A' \", function(){\r\n\r\n            Chai.assert.deepEqual(expected.getOrElse(null),result.getOrElse(null),\"Error: 'findFirstInitial()' result is INVALID!\");\r\n\r\n        });\r\n\r\n    });\r\n\r\n});\r\n\r\n"]}